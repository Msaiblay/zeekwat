MVC
====

Model
-------
	-	readme >> app >> Models


View
------
	-	readme >> resources >> views


Controller
-----------
	-	readme >> app >> Http >> Controllers

Route
------
	-	readme >> routes >> web.php

----------------------------------------------------------------------------------------------------

Routing
=========

GET method
-----------
	Route::get();

POST method
------------
	Route::post()

all method (get, post, put, patch, delete, options)
-----------
	Route::resource()

----------------------------------------------------------------------------------------------------

Relationship
============

1. One to One Relationship
		hasOne ~ belongsTo

2. One to Many Relationship
		hasMany ~ belongsTo

3. Many to Many Relationship ( * pivot table )
		belongsToMany ~ belongsToMany


-----------------------------------------------------------------------------------------------

1. Create Laravel Project in htdocs
	composer create-project laravel/laravel readme

2.  readme project folder အောက်ထဲ၀င်မယ်
	cd readme

3. check laravel framework versioon
	php artisan --version

4. Run Laravel Project in command line
	php artisan serve

5. Run laravel project in borwser
	localhost:8000

6. Install Package in command line
	->	composer require laravel/jetstream
	->	php artisan jetstream:install livewire
	->	php artisan jetstream:install inertia
	-> 	npm install
	-> 	npm run dev

7. Name your database in project folder
	readme >> .env
		-> DB_DATABASE | DB_USERNAME | DB_PASSWORD

8. Define String Length
	readme >> app >> Providers >> AppServiceProvider.php

9. Create Table in command line
	php artisan migrate

10. Create Controller in command line
		php artisan make:controller GenreController -r

11. Define Route
		readme >> routes >> web.php
		-> use App\Http\Controllers\GenreController;
		-> Route::resource('/genre',GenreController::class);

12. Template Cut
		->	create components folder in views
			readme >> resources >> views

		->	create backend.blade.php in components folder
			readme >> resources >> views >> components >> backend.blade.php

		->	extract readme folder

		->	[ backend, fonts, frontend, logo.png, photo, plugin ] move to public folder
				readme >> public

		->	app code copy from list.html
				readme >> public >> backend >> list.html

		->	paste backend.blade.php
				readme >> resources >> views >> components >> backend.blade.php

13. Create Table with migration
		-> php artisan make:migration create_authors_table
		-> php artisan make:migration create_genres_table
		-> php artisan make:migration create_languages_table
		-> php artisan make:migration create_townships_table
		-> php artisan make:migration create_shippings_table
		-> php artisan make:migration create_books_table
		-> php artisan make:migration create_book_genre_table
		-> php artisan make:migration create_orders_table
		-> php artisan make:migration create_book_order_table

14. Define column type in migration

15. Run Migration in command line
		php artisan migrate

		[or]

		php artisan migrate:fresh


16. Add Column in existing table using migration ( optional )
		-> php artisan make:migration add_gender_to_authors_table --table=authors
		-> define column type in migration
		-> php artisan migrate

17. Install Carbon Package
		composer require nesbot/carbon

18. Install Faker Package
		composer require fakerphp/faker

19. Create Seeder
		-> php artisan make:seeder TownshipSeeder
		-> php artisan make:seeder ShippingSeeder
		-> php artisan make:seeder GenreSeeder
		-> php artisan make:seeder LanguageSeeder


20. Add Data in each seeder

21. Call Seeder class in Database Seeder
		$this->call(FileName::class);

22. run seeder in command line
		php artisan db:seed

23. Create model
		php artisan make:model Author
		php artisan make:model Genre
		php artisan make:model Language
		php artisan make:model Township
		php artisan make:model Shipping
		php artisan make:model Book
		php artisan make:model Order

24. create path in command line
		php artisan storage:link

25. CRUD

------------------------------------------------------------------------------------------------

readme >> storage >> app >> public >>
အောက်မှာ
author folder နဲ့
bookcover folder ဆောက်
bookfile folder ဆောက်

photo path => /storage/author/authorone.png

			/storage/bookcover/bookone.png

			/storage/bookfile/bookfile.pdf



------------------------------------------------------------------------------------------------

Eloquent ORM
--------------
- Orbject Relational Mapping
- manage database in OOP methods and properties without having to use SQL Query



laravel view မှာ data ထုတ်တာ
<?php echo $name; ?>
{{ $name }}
{!! $name !!}

------------------------------------------------------------------------------------------------

CSRF
----
- Cross Site Request Forgery
- type of malicious activity performed on behalf of an authenticated user.
- tokens are managed by the application for each active user session
- used to verify that the requests are made by an authenticated user.


















